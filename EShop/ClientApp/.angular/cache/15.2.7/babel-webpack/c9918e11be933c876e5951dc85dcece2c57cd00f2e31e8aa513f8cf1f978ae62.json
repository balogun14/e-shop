{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ItemService {\n  constructor() {}\n  getItems(page, pageSize) {\n    let payload = {\n      items: mock_items.splice((page - 1) * pageSize, page * pageSize),\n      count: mock_items.length\n    };\n    return of(payload);\n  }\n  getItem(id) {\n    return of(mock_items[id - 1]);\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}\nconst mock_items = [{\n  id: 1,\n  name: 'Adidas Stan Smith',\n  price: 90.0,\n  category: 'Shoes',\n  description: ''\n}, {\n  id: 2,\n  name: 'Nike Air Max',\n  price: 110.0,\n  category: 'Shoes',\n  description: ''\n}, {\n  id: 3,\n  name: 'Reebok Sweat Shirt',\n  price: 45.0,\n  category: 'Clothes',\n  description: ''\n}, {\n  id: 4,\n  name: 'Puma T-Shirt',\n  price: 30.0,\n  category: 'Clothes',\n  description: ''\n}];","map":{"version":3,"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;;AAOrC,OAAM,MAAOC,WAAW;EACtBC,eAAe;EAEfC,QAAQ,CAACC,IAAY,EAAEC,QAAgB;IACrC,IAAIC,OAAO,GAAgB;MACzBC,KAAK,EAAEC,UAAU,CAACC,MAAM,CAAC,CAACL,IAAI,GAAG,CAAC,IAAIC,QAAQ,EAAED,IAAI,GAAGC,QAAQ,CAAC;MAChEK,KAAK,EAAEF,UAAU,CAACG;KACnB;IACD,OAAOX,EAAE,CAACM,OAAO,CAAC;EACpB;EAEAM,OAAO,CAACC,EAAU;IAChB,OAAOb,EAAE,CAACQ,UAAU,CAACK,EAAE,GAAG,CAAC,CAAC,CAAC;EAC/B;EAAC;qBAbUZ,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAa,SAAXb,WAAW;IAAAc,YAFV;EAAM;;AAkBpB,MAAMP,UAAU,GAAG,CACjB;EACEK,EAAE,EAAE,CAAC;EACLG,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,CAAC;EACLG,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,CAAC;EACLG,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,CAAC;EACLG,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE;CACd,CACF","names":["of","ItemService","constructor","getItems","page","pageSize","payload","items","mock_items","splice","count","length","getItem","id","factory","providedIn","name","price","category","description"],"sourceRoot":"","sources":["/home/awwal/Desktop/e-shop/EShop/ClientApp/src/app/services/item-services/item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Item } from 'src/app/interface/item';\nimport { ItemPayload } from 'src/app/interface/item-payload';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemService {\n  constructor() {}\n\n  getItems(page: number, pageSize: number): Observable<ItemPayload> {\n    let payload: ItemPayload = {\n      items: mock_items.splice((page - 1) * pageSize, page * pageSize),\n      count: mock_items.length,\n    };\n    return of(payload);\n  }\n\n  getItem(id: number): Observable<Item> {\n    return of(mock_items[id - 1]);\n  }\n}\n\nconst mock_items = [\n  {\n    id: 1,\n    name: 'Adidas Stan Smith',\n    price: 90.0,\n    category: 'Shoes',\n    description: '',\n  },\n  {\n    id: 2,\n    name: 'Nike Air Max',\n    price: 110.0,\n    category: 'Shoes',\n    description: '',\n  },\n  {\n    id: 3,\n    name: 'Reebok Sweat Shirt',\n    price: 45.0,\n    category: 'Clothes',\n    description: '',\n  },\n  {\n    id: 4,\n    name: 'Puma T-Shirt',\n    price: 30.0,\n    category: 'Clothes',\n    description: '',\n  },\n];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}